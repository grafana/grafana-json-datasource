"use strict";(self.webpackChunkgrafana_json_datasource_docs=self.webpackChunkgrafana_json_datasource_docs||[]).push([[347],{6444:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var n=t(5893),s=t(1151);const o={id:"jsonata",title:"JSONata"},r=void 0,i={id:"jsonata",title:"JSONata",description:"JSONata is a query and transformation language for JSON data.",source:"@site/docs/jsonata.md",sourceDirName:".",slug:"/jsonata",permalink:"/grafana-json-datasource/jsonata",draft:!1,unlisted:!1,editUrl:"https://github.com/grafana/grafana-json-datasource/edit/main/website/docs/jsonata.md",tags:[],version:"current",frontMatter:{id:"jsonata",title:"JSONata"},sidebar:"someSidebar",previous:{title:"JSONPath",permalink:"/grafana-json-datasource/jsonpath"},next:{title:"Troubleshooting",permalink:"/grafana-json-datasource/troubleshooting"}},c={},d=[];function l(a){const e=Object.assign({p:"p",a:"a",code:"code"},(0,s.ah)(),a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"https://docs.jsonata.org/",children:"JSONata"})," is a query and transformation language for JSON data."]}),"\n",(0,n.jsxs)(e.p,{children:["If you're new to JSONata, start by looking at some ",(0,n.jsx)(e.a,{href:"https://docs.jsonata.org/simple",children:"simple queries"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"https://grafana.com/docs/grafana/latest/variables/",children:"Dashboard variables"})," are available as JSONata variables, e.g. ",(0,n.jsx)(e.code,{children:"$instanceName"}),". Since dashboard variables can have multiple values, the JSONata variable is always an array. If your variable contains a single value, you can use ",(0,n.jsx)(e.code,{children:"$instanceName[0]"})," to index the first value in the array."]})]})}const u=function(a={}){const{wrapper:e}=Object.assign({},(0,s.ah)(),a.components);return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(l,a)})):l(a)}},1151:(a,e,t)=>{t.d(e,{Zo:()=>i,ah:()=>o});var n=t(7294);const s=n.createContext({});function o(a){const e=n.useContext(s);return n.useMemo((()=>"function"==typeof a?a(e):{...e,...a}),[e,a])}const r={};function i({components:a,children:e,disableParentContext:t}){let i;return i=t?"function"==typeof a?a({}):a||r:o(a),n.createElement(s.Provider,{value:i},e)}}}]);